{
  "name": "srv",
  "version": "1.0.0",
  "main": "index.js",
  "author": "Levente Szabo",
  "license": "MIT",
  "scripts": {
    "start:development": "ts-node-dev --respawn --transpile-only src/index.ts",
    "start:test": "cross-env NODE_ENV=test node index.js",
    "start:production": "cross-env NODE_ENV=production node dist/index.js",
    "build": "npx tsc",
    "build:development": "docker build -t multicontainer_todo_srv:dev --build-arg NODE_ENV=development .",
    "build:test": "docker build -t multicontainer_todo_srv:test --build-arg ENVIRONMENT=test",
    "build:prod": "docker build -t multicontainer_todo_srv:prod --build-arg ENVIRONMENT=production",
    "docker:development:db": "cross-env NODE_ENV=development docker-compose -f ../docker/db/docker-compose.yml -p multicontainer-todo-development up --build -d",
    "docker:development:srv": "cross-env NODE_ENV=development docker-compose -f ../docker/srv/docker-compose.yml -p multicontainer-todo-development up --build -d",
    "docker:test:db": "cross-env NODE_ENV=test docker-compose -f ../docker/db/docker-compose.yml -p multicontainer-todo-test up --build -d",
    "docker:test:srv": "cross-env NODE_ENV=test docker-compose -f ../docker/srv/docker-compose.yml -p multicontainer-todo-test up --build -d",
    "docker:production:db": "cross-env NODE_ENV=production docker-compose -f ../docker/db/docker-compose.yml -p multicontainer-todo-production up --build -d",
    "docker:production:srv": "cross-env NODE_ENV=production docker-compose -f ../docker/srv/docker-compose.yml -p multicontainer-todo-production up --build -d",
    "sequelize": "sequelize init",
    "migration": "sequelize-cli db:migrate --config src/db/config/config.cjs",
    "migration:generate": "npx sequelize-cli migration:generate --name --config src/db/config/config.cjs",
    "migration:undo": "npx sequelize-cli db:migrate:undo --config src/db/config/config.cjs",
    "migration:generate:seed": "npx sequelize-cli seed:generate --name --config src/db/config/config.cjs",
    "migration:data": "npx sequelize-cli db:seed:all --config src/db/config/config.cjs"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.0",
    "pg": "^8.13.0",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.4"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/node": "^22.7.4",
    "cross-env": "^7.0.3",
    "sequelize-cli": "6.3.0",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.6.2"
  }
}
